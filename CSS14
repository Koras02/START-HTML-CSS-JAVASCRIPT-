CSS-14.CSS 코드의 재사용 


수업에 막바지가 도달했다 이코드를 다른페이지에게도 전파하자 

1.html 에가 면 좀이상한다 2.html 에도 가면 2.html 은 되는데 

1.html 은 이상함 왜냐면 그이유는 화면은 두개로 둬보고 

1.html 
2.html에는 grid가 바깥에 감싸저있는 상황 그리고 본문은 감싸는 곳 2.html보니까 div으로 감싸고있음 시시 리로드하면 잘작동함 
3.html 과 index 에도 적용해보자 그러면 일관 적인 웹이됨. 그러면 다시한번 극단적인 상황을 상상해보자 

이런 코드를 여러페이지에 적용할때 까다로웠는데 웹이 1~2개가아니 1억개일때 예를 들면 링크를밑줄을 쳣으면  수정했으면 좋겠다며 쉽게 이런 돌을 던지면 

아프겠죠?/?  그럴때 

text-decoration:none; 으로하는것을 없애면 밑줄이 생기는데 모든웹페이지에 수정해야해야함. 그런 일이있다면 직업을 바꾸고싶다는생각이든다.

그래서 우리의 ㅋ코드 css코드가 모든 웹페이지에 중복으로 등장하기떄문이다.코딩을 잘하는 방법 중복제거가 필요하다는점.

중복을 제거해서 프로그램이 얼마나 효율 적인 지 알아보고 중복이 얼마나 중요하고그중복의 제거가 새로운 기술이 나타나는데 큰역할을 했구나 공감 하는것 

일단 중복 css코드를 style 코드를 제외한 순수 css를 style.css란 파일을 만들어서 그곳에 붙여넣기 자 <style>뺴고 css코드만 복사해서 별도의 파일로 뺌 

그리고 style 태그는 ㅇ지워버리고 웹브라우저에게 "이커서감 껌벅거리는 위치에 style.css 라는 별도의 css를 다운받아 원래 있었던 것처럼 동작해"라고 해주는것그게바로

link라는 태그 link를 통해 어떤 css파일이 연결되어있는지 알려준것 이렇게 표시하면 1.html은 style.css라는 파일이 연결되어있고 웹브라우저는 style.css파일을 다운 받아서

그것은 웹페이지에 적용하게될것이다 라는것  1.html가면 변화가없음 그럼 이제우리는 기기있는 style .css 파일을 각각에 붙여넣기 결과는 똑같이 동작하지만 내부적으로는 완전히 동작이달라지면서 

훨씬 효율적이게됨 그럼 객관적으로 보자 만약 누군가가 이 웹페이지의 모든 링크에 밑줄을 넣으려고 하면 style.css 라는 공통적인 파일로가서 바꿔주면 모든웹페이지에 적용되는 폭팔적인 효과를 보게된다.


이렇게 했을때 우리가 얻을수있는 효과는 css시작할때 선택자라는 것을 통해서 얻을수는 중복의 제거에서 등장했던 효과와 똑같은 효과를 여기서도 만나게된다.

style.css라는 코드가 있다면 이곳에 위치하는 코드는 style.css라는 파일안에 코드라는 것을 확신할수있다.하지만 1.html 2.html 3.html에 이 위치에 css코드가 직접 기술 되어 있다면 

우리는 각각의 파일별로 존재하는 css가 실제로 같은지 안같은지를 파악하기가 대단히 어려울 것이다. 코드가 길어지면 인간이하기에 복잡해진다.기계에도움 필요.그리고 새로운 웹페이지를 만들때.여기에 한줄만 

표현하면 style.css 를 몰라도 style.css라는 시각적인 기능을 사용할수있게됨. 즉 재사용이 늘어나고 사용자의 입장에서는 내부적인 코딩의 원리를 몰라도 사용할수 있게 되니까. 


사용성도 높아진다고 볼수있음 그리고 우리가 가진 웹페이지가 1억개여도 style.css로 하나만 바꾸면 1억개건 10억개건 동시에 바뀌는 폭발적인 효과를 봄.그리고 코드의 양이 줄었기 떄문에 웹페이지를 

다운 받을때 인터넷 사용료를 덜낼수있다라는 중요한 사실과 물로 style.css를 따로 뺀다고해도 css를 다운받지않는것은 아님 웹페이지에서 개발자도구를 키고 network를 클릭하면 현재 보고있는페이지를 

리로드할때 어떤 파일들을 다운로드받는지 알려주는 화면이다.1.html을 찾았고 그내용을 ㅂ고 

해석하고 link태그를 만나고 style.css를 다운받아야한다는걸알고 몰래 조용히 style.css를 

받아서 웹페이지에 적용한것 그러면 이렇게 여려개 웹페이지 하나의 웹페이지 에 별도로 

두고 다운로드 받는것과 그냥웹페이지에 css를 내장하는것에서 어던 거 네트워크에

적게 사용하는것일까 웹페이지안에 css를 놓는게 효율적 하지만 이러한 테크닉 떄문에 

하지만 지금부터 설명한 테크닉떄문에 그렇지안은 바로 캐싱 캐싱이란 저장한다는것인다

만약 style.css를 다운받았다면 style.css를 우리컴퓨터에 저장하다가 style.css를 요청한다면 

저장된 결과를 가져와서 속도를 높일수있고(네트워크를 안써서) 사업자도 돈을덜슬수있는 

굉장히 중요한 효과를 얻음 바로 캐싱을 하게되면 훠맀ㄴ더 빠르게 웹페이지를 보여주고

네트워크의 트래픽 사용료를 덜낼수있는 효과를 얻을수 있기떄문에 가급접 style.css를 꺼내서

별도의 파일로 꺼내서 중복을 제거하는것을 추천한다. 이렇게해서 어떻게 하면 우리의 

웹페이지를 효율적으로 할것인가 알아봤는데 link라는 태그도 중요하지만 

이기술의 발전에서 정보기술의 있어서 중복을 제거해서 재상용도를 높이고 가동석을 높이고

유지보수를 편리하게하는 것들이 얼마나 중요한것인지 공감했으면 좋겠다.
